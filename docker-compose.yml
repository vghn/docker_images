version: '2'

services:
  lb:
    image: dockercloud/haproxy
    links:
      - api
      - server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    volumes_from:
      - data
    environment:
      CERT_FOLDER: '/etc/puppetlabs/vault/production/certs/'
    ports:
      - '443:443'
      - '8140:8140'
    restart: unless-stopped
    networks:
      - frontend
      - backend
  server:
    image: vladgh/vpm-server:latest
    hostname: puppet.ghn.me
    volumes_from:
      - data
    environment:
      AUTOSIGN: '/usr/local/bin/csr-sign'
      AUTOSIGN_CFG: '/etc/puppetlabs/vault/production/csr.yaml'
      DNS_ALT_NAMES: 'puppet,puppet.ghn.me,puppetca,puppetca.ghn.me'
      JAVA_ARGS: '-Xms1G -Xmx1G'
      TCP_PORTS: '8140'
    entrypoint: sh -c "until [ -s /var/local/deployed_r10k ]; do echo 'Waiting for R10K'; sleep 5; done; /entrypoint.sh puppetserver foreground"
    restart: unless-stopped
    networks:
      - backend
  log:
    hostname: log-agent
    image: gliderlabs/logspout:latest
    volumes_from:
      - data
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: sh -c "until [ -s /etc/puppetlabs/vault/production/log.env ]; do echo 'Waiting for data'; sleep 5; done && set -a && . /etc/puppetlabs/vault/production/log.env && /bin/logspout syslog://$${LOG_SERVER_ADDRESS}:$${LOG_SERVER_PORT}"
    restart: unless-stopped
    networks:
      - backend
  sync:
    image: vladgh/vpm-sync:latest
    hostname: ssl-sync-agent
    volumes_from:
      - data
    entrypoint: sh -c "until [ -s /etc/puppetlabs/vault/production/sync.env ]; do echo 'Waiting for data'; sleep 5; done && set -a && . /etc/puppetlabs/vault/production/sync.env && /entrypoint.sh"
    restart: unless-stopped
    networks:
      - backend
  api:
    image: vladgh/vpm-api:latest
    hostname: api
    environment:
      AWS_ASSETS_BUCKET: 'vladgh'
      VAULT_S3PATH: 's3://vladgh/vault'
      HIERA_S3PATH: 's3://vladgh/hieradata'
      DATA_CONFIG: '/etc/puppetlabs/vault/production/api.yaml'
      FORCE_SSL: 'true'
      VIRTUAL_HOST: 'https://*'
    volumes_from:
      - data
    restart: unless-stopped
    networks:
      - backend
  data:
    image: alpine:latest
    hostname: data
    volumes:
      - ssl:/etc/puppetlabs/puppet/ssl
      - code:/etc/puppetlabs/code
      - vault:/etc/puppetlabs/vault
      - hieradata:/etc/puppetlabs/hieradata
      - ~/.aws:/root/.aws:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/local
    command: /bin/true
    networks:
      - backend

volumes:
  ssl:
  code:
  vault:
  hieradata:

networks:
  frontend:
  backend:
